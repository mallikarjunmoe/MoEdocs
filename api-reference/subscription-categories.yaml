openapi: 3.0.3
info:
  title: MoEngage Subscription Categories API
  description: |
    Enables you to fetch and update email subscription preferences on your MoEngage dashboard.
    
    This API provides endpoints for:
    * **Get Preferences**: Fetches subscription preferences for a specific user.
    * **Update Preferences**: Updates preferences for a specific user (e.g., from a landing page).
    * **Bulk Update Preferences**: Updates preferences for a batch of users.
    
    Authentication is handled via Basic Auth (Workspace ID as username, Data API Key as password).
  version: '1.0'
servers:
  - url: 'https://api-{dc}.moengage.com/v1'
    variables:
      dc:
        default: '01'
        description: 'The data center number for your account (e.g., 01, 02, 03).'
tags:
  - name: Subscription Preferences
    description: Manage user email subscription preferences.
paths:
  /category-subscription/user-preferences:
    get:
      tags:
        - Subscription Preferences
      summary: Get Subscription Preferences
      operationId: getSubscriptionPreferences
      description: Fetches the subscription category preferences information for a specific user.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/UserIdQuery'
        - $ref: '#/components/parameters/CidQuery'
        - name: Content-Type
          in: header
          required: true
          description: Must be set to application/json.
          schema:
            type: string
            default: application/json
      responses:
        '200':
          description: Success. Returns the user's subscription preferences.
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    $ref: '#/components/schemas/SubscriptionCategories'
              example:
                categories:
                  Promotional: true
                  Product Update: true
                  Newsletter: true
                  Artist Updates: true
                  Playlist Updates: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Subscription Preferences
      summary: Update Subscription Preferences
      operationId: updateSubscriptionPreferences
      description: Updates the subscription category preferences for a specific user who navigates from an email.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/UserIdQuery'
        - $ref: '#/components/parameters/CidQuery'
        - $ref: '#/components/parameters/MoeEventIdQuery'
      requestBody:
        required: true
        description: The user's updated preferences.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePreferencesRequest'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Success"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Subscription Preferences
      summary: Bulk Update Subscription Preferences
      operationId: bulkUpdateSubscriptionPreferences
      description: Updates subscription category preferences in bulk for a batch of up to 50 users.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
      requestBody:
        required: true
        description: A list of preference updates for multiple users.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdatePreferencesRequest'
      responses:
        '200':
          description: Your request has been processed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Your request has been processed"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: 'Uses **Workspace ID** as username and **Data API Key** as password. Found in Settings > Account > APIs > Data.'
  parameters:
    AppKeyHeader:
      name: MOE-APPKEY
      in: header
      required: true
      description: Your MoEngage Workspace ID.
      schema:
        type: string
    UserIdQuery:
      name: user_id
      in: query
      required: true
      description: The MoEngage ID that uniquely identifies the customer. (Encrypted and fetched from landing page URL).
      schema:
        type: string
    CidQuery:
      name: cid
      in: query
      required: true
      description: The campaign ID of the email campaign. (Encrypted and fetched from landing page URL).
      schema:
        type: string
    MoeEventIdQuery:
      name: moe_event_id
      in: query
      required: false
      description: Used to update the unsubscribe event when the user chooses 'unsubscribe all'.
      schema:
        type: string
  schemas:
    SubscriptionCategories:
      type: object
      description: A map of category names to their subscription status (true for subscribed, false for unsubscribed).
      additionalProperties:
        type: boolean
      example:
        Promotions: true
        Updates: false
        Recommendations: true
    UpdatePreferencesRequest:
      type: object
      required:
        - categories
        - unsubscribe_all
      properties:
        categories:
          $ref: '#/components/schemas/SubscriptionCategories'
        unsubscribe_all:
          type: boolean
          description: "Set to true to unsubscribe the user from all categories, regardless of the 'categories' object."
      example:
        unsubscribe_all: false
        categories:
          Promotional: true
          Transactional: false
          Special Offers: true
    UserPreferenceEntry:
      type: object
      required:
        - customer_id
        - categories
        - unsubscribe_all
      properties:
        customer_id:
          type: string
          description: The unique identifier for the customer (e.g., email or customer ID).
          example: "john@example.com"
        categories:
          $ref: '#/components/schemas/SubscriptionCategories'
        unsubscribe_all:
          type: boolean
          description: "Set to true to unsubscribe the user from all categories."
    BulkUpdatePreferencesRequest:
      type: object
      required:
        - channel
        - user_preferences
      properties:
        channel:
          type: string
          description: The communication channel.
          enum: [email]
          example: "email"
        user_preferences:
          type: array
          description: A list of user preference objects to update. Maximum 50 per request.
          maxItems: 50
          items:
            $ref: '#/components/schemas/UserPreferenceEntry'
      example:
        channel: "email"
        user_preferences:
          - customer_id: "john@example.com"
            categories:
              Promotional: false
              Special Offers: true
            unsubscribe_all: false
          - customer_id: "mike@example.com"
            categories:
              Transactional: true
              Promotional: false
            unsubscribe_all: false
    Error:
      type: object
      properties:
        title:
          type: string
          description: The type of error.
          nullable: true
        description:
          type: string
          description: A human-readable description of the error.
          nullable: true
        message:
          type: string
          description: A human-readable description of the error.
          nullable: true
  responses:
    BadRequest:
      description: Bad Request. Required parameters are missing, invalid, or payload limit is exceeded.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            invalid_params_get:
              summary: Invalid Params (GET)
              value:
                message: "Invalid Params Received"
            payload_limit_post:
              summary: Payload Limit Exceeded (POST)
              value:
                title: "Payload Limit Exceeded"
                description: "Payload limit is set to 50"
    Unauthorized:
      description: Authorization Failure. Incorrect credentials or missing header.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            auth_required:
              summary: Auth Failure
              value:
                title: "Authentication required"
                description: "No identity information found."
            missing_appkey:
              summary: Missing Header
              value:
                title: "Header required"
                description: "MOE-APPKEY missing in Header"
    Conflict:
      description: Conflict. API Secret not configured on the dashboard.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            title: "API SECRET not configured"
            description: "This response is returned when the authorization fails due to the APP SECRET key not being set on the Dashboard."
    TooManyRequests:
      description: Rate Limit Breach. The number of requests per minute has exceeded the limit (100 RPM).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            title: "Rate-Limit Reached"
            description: "Exceeded rate limit for this url"
    InternalServerError:
      description: Internal Server Error. The system ran into an unexpected error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            title: "Internal Error"
            description: "Please Contact Moengage Team"
security:
  - basicAuth: []