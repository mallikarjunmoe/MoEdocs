openapi: 3.0.3
info:
  title: MoEngage Coupon List API
  description: |
    API for managing coupon lists within the MoEngage system. This includes creating, fetching, updating, activating, archiving lists, uploading coupon files, managing files, and generating usage reports.
    Authentication is via Basic Auth.
  version: '1.0'
servers:
  - url: 'https://api-{dc}.moengage.com/v1'
    variables:
      dc:
        default: '01'
        description: 'The data center number for your account (e.g., 01, 02, 03).'
tags:
  - name: Coupon Lists
    description: Operations related to managing coupon lists (collections of coupon codes).
  - name: Coupon Files
    description: Operations related to managing files containing coupon codes associated with a list.
  - name: Reports
    description: Operations related to generating reports for coupon lists.
paths:
  /coupon-list:
    post:
      tags:
        - Coupon Lists
      summary: Create Coupon List
      operationId: createCouponList
      description: |
        Creates a new coupon list definition. Coupons need to be added separately using the Upload Coupons API.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCouponListRequest'
            example:
              name: "signup_coupons_2024"
              label: "Signup Coupons 2024"
              created_by: "api_user@example.com"
              email_alert_subscribers": ["ops@example.com"]
              expires_at: "2024-12-31"
              alert_conditions:
                success_alert: true
                failure_alert: true
                expiry_alert:
                  alert: true
                  days_before: 7
                coupon_shortage_alert:
                  alert: true
                  threshold_count: 100
      responses:
        '201':
          description: Coupon list created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Coupon Lists
      summary: Fetch All Coupon Lists
      operationId: fetchAllCouponLists
      description: Retrieves all coupon lists in the workspace, optionally filtered by status. Defaults to ACTIVE status if not specified.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - name: status
          in: query
          required: false
          description: Filter lists by status. If omitted, returns all lists (or defaults to ACTIVE based on description).
          schema:
            type: string
            enum: [ACTIVE, ARCHIVED, EXPIRED]
      responses:
        '200':
          description: Successfully retrieved coupon lists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CouponList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /coupon-list/{coupon_list_id}:
    get:
      tags:
        - Coupon Lists
      summary: Fetch Coupon List
      operationId: fetchCouponList
      description: Retrieves the specifications and status of a specific coupon list by its ID.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/CouponListIdPath'
      responses:
        '200':
          description: Coupon list details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponList'
        '400':
          $ref: '#/components/responses/BadRequest' # Although not explicitly listed for 400, it's possible for invalid ID format
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Coupon list not found for the given ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error:
                  code: "coupon-list-not-found"
                  message: "Coupon list with the specified ID was not found."
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - Coupon Lists
      summary: Update Coupon List
      operationId: updateCouponList
      description: |
        Modifies an existing coupon list's properties like name, expiry date, subscribers, and alert conditions.
        Reactivates ARCHIVED or EXPIRED lists if the new expiry date is in the future.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/CouponListIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCouponListRequest'
            example:
              name: "signup_coupons_updated"
              expires_at: "2025-12-31"
              email_alert_subscribers": ["new_ops@example.com"]
              alert_conditions:
                coupon_shortage_alert:
                  alert: true
                  threshold_count: 50
      responses:
        '200':
          description: Coupon list updated successfully. Returns the updated list details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
           description: Coupon list not found for the given ID.
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/ErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /coupon-list/{coupon_list_id}/activate:
    put:
      tags:
        - Coupon Lists
      summary: Activate Coupon List
      operationId: activateCouponList
      description: Reactivates an ARCHIVED coupon list, provided the expiry date is set to a future date. Requires providing a new expiry date.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/CouponListIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - expires_at
              properties:
                expires_at:
                  type: string
                  format: date
                  description: A new future expiry date for the coupon list (YYYY-MM-DD format).
                  example: "2025-12-31"
      responses:
        '204':
          description: Coupon list activated successfully. No content returned.
        '400':
          $ref: '#/components/responses/BadRequest' # e.g., if expires_at is in the past or list is already active/expired
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
           description: Coupon list not found for the given ID.
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/ErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /coupon-list/{coupon_list_id}/archive:
    put:
      tags:
        - Coupon Lists
      summary: Archive Coupon List
      operationId: archiveCouponList
      description: Archives an active coupon list. Coupons within the list are deleted, and campaigns can no longer use it.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/CouponListIdPath'
      responses:
        '204':
          description: Coupon list archived successfully. No content returned.
        '400':
          $ref: '#/components/responses/BadRequest' # e.g., if list is already archived/expired
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
           description: Coupon list not found for the given ID.
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/ErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /coupon-list/{coupon_list_id}/files:
    post:
      tags:
        - Coupon Files
      summary: Upload Coupons via File URL
      operationId: uploadCouponFile
      description: Adds coupons to a list by processing a file hosted at a given URL. Processing happens asynchronously.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/CouponListIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadCouponFileRequest'
            example:
              file_url: "https://example.com/path/to/coupons.csv"
              name: "October Batch"
              created_by": "uploader@example.com"
              callback_url: "https://my-system.com/webhook/coupon-upload-status"
      responses:
        '201':
          description: Coupon file upload request accepted. Processing is pending.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponFile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
           description: Coupon list not found for the given ID.
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/ErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Coupon Files
      summary: Fetch All Coupon Files in List
      operationId: fetchAllCouponFiles
      description: Retrieves details of all coupon files added to a specific coupon list.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/CouponListIdPath'
      responses:
        '200':
          description: Successfully retrieved list of coupon files.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CouponFile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
           description: Coupon list not found for the given ID.
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/ErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /coupon-list/{coupon_list_id}/files/{file_id}:
    get:
      tags:
        - Coupon Files
      summary: Fetch Coupon File Details
      operationId: fetchCouponFile
      description: Retrieves details of a specific coupon file within a coupon list, including its processing status and counts.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/CouponListIdPath'
        - $ref: '#/components/parameters/FileIdPath'
      responses:
        '200':
          description: Coupon file details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponFile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
           description: Coupon list or file not found.
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/ErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Coupon Files
      summary: Delete Coupon File
      operationId: deleteCouponFile
      description: Removes a specific coupon file from a coupon list (e.g., if uploaded incorrectly).
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/CouponListIdPath'
        - $ref: '#/components/parameters/FileIdPath' # Note: Doc uses {{coupon_file_id}} in path
      responses:
        '204':
          description: Coupon file deleted successfully. No content returned.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
           description: Coupon list or file not found.
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/ErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /coupon-list/{coupon_list_id}/usage-report:
    post:
      tags:
        - Reports
      summary: Generate Usage Report
      operationId: generateUsageReport
      description: Generates a usage report for a coupon list within a specified date range and sends it to the provided email addresses.
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/CouponListIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - start_date
                - end_date
                - email_subscribers
              properties:
                start_date:
                  type: string
                  format: date
                  description: Start date for the report (YYYY-MM-DD).
                  example: "2024-11-01"
                end_date:
                  type: string
                  format: date
                  description: End date for the report (YYYY-MM-DD).
                  example: "2024-11-21"
                email_subscribers:
                  type: array
                  description: List of email addresses to receive the report.
                  items:
                    type: string
                    format: email
                  example: ["reports@example.com", "manager@example.com"]
      responses:
        '200':
          description: Usage report generation request accepted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The usage report for the CouponListName coupons is being processed and will be sent to email alert subscribers shortly."
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
           description: Coupon list not found for the given ID.
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/ErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: 'Uses **Workspace ID** as username and **API Key** (from Campaign/Business Events/Custom Templates/Catalog API tile) as password.'
  parameters:
    AppKeyHeader:
      name: MOE-APPKEY
      in: header
      required: true
      description: Your MoEngage Workspace ID.
      schema:
        type: string
    CouponListIdPath:
      name: coupon_list_id
      in: path
      required: true
      description: The unique identifier for the coupon list.
      schema:
        type: string
    FileIdPath:
      name: file_id # Assuming standard practice, though docs use {{coupon_file_id}}
      in: path
      required: true
      description: The unique identifier for the coupon file within the list.
      schema:
        type: string
  schemas:
    AlertConditions:
      type: object
      properties:
        success_alert:
          type: boolean
          description: Send alert on successful coupon upload.
        failure_alert:
          type: boolean
          description: Send alert on failed coupon upload.
        coupon_shortage_alert:
          type: object
          properties:
            alert:
              type: boolean
              description: Enable alert when available coupons fall below threshold.
            threshold_count:
              type: integer
              description: The number of available coupons below which to trigger the alert.
        expiry_alert:
          type: object
          properties:
            alert:
              type: boolean
              description: Enable alert before the coupon list expires.
            days_before:
              type: integer
              description: How many days before expiry to send the alert.
    CreateCouponListRequest:
      type: object
      required:
        - name
        - label
        - expires_at
        - created_by
      properties:
        name:
          type: string
          description: Unique name for the coupon list.
        label:
          type: string
          description: Label name for the coupon list (must also be unique according to error messages).
        expires_at:
          type: string
          format: date
          description: Expiry date for the list (YYYY-MM-DD). Cannot be in the past.
        email_alert_subscribers:
          type: array
          items:
            type: string
            format: email
          description: List of email addresses to receive alerts.
          nullable: true
        created_by:
          type: string
          description: Email or identifier of the user creating the list.
        alert_conditions:
          $ref: '#/components/schemas/AlertConditions'
          nullable: true
    UpdateCouponListRequest:
      type: object
      properties:
        name:
          type: string
          description: New unique name for the coupon list.
        expires_at:
          type: string
          format: date
          description: New expiry date for the list (YYYY-MM-DD). Cannot be in the past.
        email_alert_subscribers:
          type: array
          items:
            type: string
            format: email
          description: New list of email addresses to receive alerts.
          nullable: true
        alert_conditions:
          $ref: '#/components/schemas/AlertConditions'
          nullable: true
    CouponList:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier for the coupon list.
        name:
          type: string
          description: Name of the coupon list.
        label:
          type: string
          description: Label of the coupon list.
        expires_at:
          type: string
          format: date-time # Assuming it returns datetime based on example
          description: Expiry date and time of the list.
        created_by:
          type: string
          description: Identifier of the user who created the list.
        email_alert_subscribers:
          type: array
          items:
            type: string
            format: email
          description: List of email addresses receiving alerts.
        alert_conditions:
          $ref: '#/components/schemas/AlertConditions'
        status:
          type: string
          enum: [ACTIVE, EXPIRED, ARCHIVED]
          description: Current status of the coupon list.
        total_coupons:
          type: integer
          description: Total number of coupons ever added to this list.
        available_coupons:
          type: integer
          description: Number of currently available (unassigned) coupons.
        created_at:
          type: string
          format: date-time
          description: Timestamp when the list was created.
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the list was last updated.
        personalization_snippet:
          type: string
          description: Jinja snippet to use in campaigns for personalization.
          example: "{{Coupons.CouponListName[signup_coupons]}}"
    UploadCouponFileRequest:
      type: object
      required:
        - file_url
      properties:
        name:
          type: string
          description: Optional name for this specific file upload.
          nullable: true
        file_url:
          type: string
          format: url
          description: Publicly accessible URL of the CSV file containing coupon codes.
        file_url_auth_username:
          type: string
          description: Username for basic authentication if the file URL requires it.
          nullable: true
        file_url_auth_password:
          type: string
          description: Password for basic authentication if the file URL requires it.
          nullable: true
        created_by:
          type: string
          description: Email or identifier of the user uploading the file.
          nullable: true
        callback_url:
          type: string
          format: url
          description: URL to be called back upon completion (success/failure) of file processing.
          nullable: true
    CouponFile:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier for the coupon file upload record.
        coupon_list_id:
          type: string
          description: ID of the coupon list this file belongs to.
        name:
          type: string
          description: Name assigned to the file upload.
          nullable: true
        file_url:
          type: string
          format: url
          description: The URL from which the coupons were uploaded.
        created_by:
          type: string
          description: Identifier of the user who uploaded the file.
          nullable: true
        status:
          type: string
          enum: [PENDING, PROCESSING, SUCCESSFUL, FAILED] # Guessed statuses based on context
          description: Processing status of the uploaded file.
        added_coupons:
          type: integer
          description: Number of coupons successfully added from this file.
        created_at:
          type: string
          format: date-time
          description: Timestamp when the file upload was requested.
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the file status was last updated.
        callback_url:
          type: string
          format: url
          description: The callback URL provided during upload.
          nullable: true
        # Potentially add fields for failure reasons if available
    Error:
      type: object
      properties:
        code:
          type: string
          description: Machine-readable error code.
        message:
          type: string
          description: Human-readable error message.
    ErrorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
  responses:
    BadRequest:
      description: Bad Request. Invalid input, missing fields, duplicate names/labels, date errors, etc.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "duplicate-coupon-list-name"
              message: "The coupon list name already exists. Please enter a unique name and try again."
    Unauthorized:
      description: Unauthorized. Invalid authentication credentials.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "request-unauthenticated"
              message: "Your request is unauthorized. Please verify your credentials and try again."
    Forbidden:
      description: Forbidden. Access to Coupon Management features denied.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "request-forbidden"
              message: "Your account does not have access to the Coupon Management features."
    TooManyRequests:
      description: Too Many Requests. Rate limit exceeded.
      headers:
        x-ratelimit-limit:
          schema: { type: integer }
          description: The request limit per time window.
        x-ratelimit-remaining:
          schema: { type: integer }
          description: The remaining requests in the current window.
        x-ratelimit-reset:
          schema: { type: integer }
          description: UTC epoch seconds when the limit resets.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "too-many-requests"
              message: "Rate limit exceeded."
    InternalServerError:
      description: Internal Server Error. Unexpected system error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "unexpected-error"
              message: "Something went wrong with your request. Contact the MoEngage team."
security:
  - basicAuth: []