openapi: 3.0.3
info:
  title: MoEngage Custom Segments API
  description: |
    Use the MoEngage Custom Segments API to create, update, and manage your file and filter segments.
    
    - **v2 API:** Manage File Segments and segment lifecycle (Archive/Unarchive).
    - **v3 API:** Create, read, update, and list filter-based Custom Segments.
  version: '3.0'
servers:
  - url: https://api-{dc}.moengage.com
    description: MoEngage API Endpoint
    variables:
      dc:
        description: Your account's Data Center (e.g., 01, 02, 03).
        default: '01'
        enum:
          - '01'
          - '02'
          - '03'
          - '04'
          - '05'
tags:
  - name: Custom Segments - File
    description: Manage segments created from user files (CSVs).
  - name: Custom Segments - Lifecycle
    description: Archive and unarchive custom segments.
  - name: Custom Segments - Filters
    description: Create, read, update, and list filter-based custom segments.
security:
  - basicAuth: []
paths:
  /v2/custom-segments/file-segment:
    post:
      tags:
        - Custom Segments - File
      summary: Create File Segment
      description: Creates a new Custom File Segment from a CSV file URL.
      operationId: createFileSegment
      x-mint:
        content: |
          <Note>
            **CSV File Requirements:**
            * The attribute names should be separated by new lines.
            * CSV should be a single column and less than 150MB.
            * Values should not end with a comma (e.g., `abcd` not `abcd,`).
            * Values should not have duplicates or special characters (e.g., `abcd` not `"abcd"` or `a#bc`).
            * File should not have empty rows or columns.
            * A user attribute value must uniquely identify a single user.
            * [Sample File Link](https://app-cdn.moengage.com/assets/Sample_GAIDs.csv)
          </Note>
      parameters:
        - $ref: '#/components/parameters/DatabaseHeader'
      requestBody:
        description: Configuration for the new file segment.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSegmentRequestV2'
            example:
              name: "custom_segment_unique_name"
              attribute_name: "unique_identifier"
              attribute_type: "string"
              file_url: "https://s3.amazonaws.com/Sample_GAIDs.csv"
              callback_url: "http://example.com/moengage-callback"
              emails: ["user1@example.com", "user2@example.com"]
              expiry_time: 30
      responses:
        '202':
          $ref: '#/components/responses/202_FileSegmentAccepted'
        '401':
          $ref: '#/components/responses/401_FileSegmentError'
        '409':
          $ref: '#/components/responses/409_FileSegmentConflict'
        '429':
          $ref: '#/components/responses/429_FileSegmentRateLimit'
        '500':
          $ref: '#/components/responses/5XX_FileSegmentError'
      callbacks:
        segmentCreationCallback:
          $ref: '#/components/callbacks/segmentProcessingCallback'
  /v2/custom-segments/file-segment/add-users:
    put:
      tags:
        - Custom Segments - File
      summary: Add users to file segment
      description: Adds a list of users from a CSV file to an existing file segment.
      operationId: addUsersToFileSegment
      parameters:
        - $ref: '#/components/parameters/DatabaseHeader'
      requestBody:
        description: Details of the segment to update and the file URL of users to add.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSegmentRequestV2'
            example:
              name: "custom_segment_unique_name"
              attribute_name: "unique_identifier"
              attribute_type: "string"
              file_url: "https://s3.amazonaws.com/Sample_GAIDs_add.csv"
              callback_url: "http://example.com/moengage-callback"
              emails: ["user1@example.com"]
      responses:
        '202':
          $ref: '#/components/responses/202_FileSegmentAccepted'
        '400':
          $ref: '#/components/responses/400_FileSegmentError'
        '401':
          $ref: '#/components/responses/401_FileSegmentError'
        '404':
          $ref: '#/components/responses/404_FileSegmentNotFound'
        '429':
          $ref: '#/components/responses/429_FileSegmentRateLimit'
        '500':
          $ref: '#/components/responses/5XX_FileSegmentError'
      callbacks:
        segmentUpdateCallback:
          $ref: '#/components/callbacks/segmentProcessingCallback'
  /v2/custom-segments/file-segment/remove-users:
    put:
      tags:
        - Custom Segments - File
      summary: Remove users from File Segment
      description: Removes a list of users from a CSV file from an existing file segment.
      operationId: removeUsersFromFileSegment
      parameters:
        - $ref: '#/components/parameters/DatabaseHeader'
      requestBody:
        description: Details of the segment to update and the file URL of users to remove.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSegmentRequestV2'
            example:
              name: "custom_segment_unique_name"
              attribute_name: "unique_identifier"
              attribute_type: "string"
              file_url: "https://s3.amazonaws.com/Sample_GAIDs_remove.csv"
              callback_url: "http://example.com/moengage-callback"
              emails: ["user1@example.com"]
      responses:
        '202':
          $ref: '#/components/responses/202_FileSegmentAccepted'
        '400':
          $ref: '#/components/responses/400_FileSegmentError'
        '401':
          $ref: '#/components/responses/401_FileSegmentError'
        '404':
          $ref: '#/components/responses/404_FileSegmentNotFound'
        '429':
          $ref: '#/components/responses/429_FileSegmentRateLimit'
        '500':
          $ref: '#/components/responses/5XX_FileSegmentError'
      callbacks:
        segmentUpdateCallback:
          $ref: '#/components/callbacks/segmentProcessingCallback'
  /v2/custom-segments/file-segment/replace:
    put:
      tags:
        - Custom Segments - File
      summary: Replace users from File Segment
      description: Replaces all users in an existing file segment with a new list of users from a CSV file.
      operationId: replaceUsersInFileSegment
      x-mint:
        content: |
          <Note>
            * This API drops all existing users from the custom segment and adds the new users provided in the `file_url`.
            * Only the newly added users are counted towards the daily `file_segment_user` limit.
          </Note>
      parameters:
        - $ref: '#/components/parameters/DatabaseHeader'
      requestBody:
        description: Details of the segment to update and the file URL of users to replace with.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSegmentRequestV2'
            example:
              name: "custom_segment_unique_name"
              attribute_name: "unique_identifier"
              attribute_type: "string"
              file_url: "https://s3.amazonaws.com/Sample_GAIDs_replace.csv"
              callback_url: "http://example.com/moengage-callback"
              emails: ["user1@example.com"]
      responses:
        '202':
          $ref: '#/components/responses/202_FileSegmentAccepted'
        '400':
          $ref: '#/components/responses/400_FileSegmentError'
        '401':
          $ref: '#/components/responses/401_FileSegmentError'
        '404':
          $ref: '#/components/responses/404_FileSegmentNotFound'
        '429':
          $ref: '#/components/responses/429_FileSegmentRateLimit'
        '500':
          $ref: '#/components/responses/5XX_FileSegmentError'
      callbacks:
        segmentUpdateCallback:
          $ref: '#/components/callbacks/segmentProcessingCallback'
  /v2/custom-segments/archive:
    patch:
      tags:
        - Custom Segments - Lifecycle
      summary: Archive Custom Segment
      description: Archives an existing custom segment (File or Filter).
      operationId: archiveCustomSegment
      x-mint:
        content: |
          <Warning>
            Archived segments will not be shown beyond 180 days.
          </Warning>
      parameters:
        - $ref: '#/components/parameters/DatabaseHeader'
      requestBody:
        description: The name of the custom segment to be archived.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentNameRequestV2'
            example:
              name: "custom_segment_unique_name"
      responses:
        '202':
          description: Custom-segment archive request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseSuccessV2'
              examples:
                success:
                  value:
                    message: "Successfully archived the custom segment"
                    success": true
                    cs_name": "custom_segment_unique_name"
        '400':
          $ref: '#/components/responses/400_FileSegmentError'
        '401':
          $ref: '#/components/responses/401_FileSegmentError'
        '404':
          $ref: '#/components/responses/404_FileSegmentNotFound'
        '500':
          $ref: '#/components/responses/5XX_FileSegmentError'
  /v2/custom-segments/unarchive:
    patch:
      tags:
        - Custom Segments - Lifecycle
      summary: UnArchive Custom Segment
      description: Unarchives an existing custom segment, making it active again.
      operationId: unarchiveCustomSegment
      parameters:
        - $ref: '#/components/parameters/DatabaseHeader'
      requestBody:
        description: The name of the custom segment to be unarchived.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentNameRequestV2'
            example:
              name: "custom_segment_unique_name"
      responses:
        '202':
          description: Custom-segment unarchive request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseSuccessV2'
              examples:
                success:
                  value:
                    message: "Successfully unarchived the custom segment"
                    success": true
                    cs_name": "custom_segment_unique_name"
        '400':
          $ref: '#/components/responses/400_FileSegmentError'
        '401':
          $ref: '#/components/responses/401_FileSegmentError'
        '404':
          $ref: '#/components/responses/404_FileSegmentNotFound'
        '500':
          $ref: '#/components/responses/5XX_FileSegmentError'
  /v3/custom-segments:
    get:
      tags:
        - Custom Segments - Filters
      summary: List Custom Segments
      description: Lists all custom segments. Can optionally filter by an exact name match.
      operationId: listCustomSegments
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/SegmentNameQuery'
      responses:
        '200':
          $ref: '#/components/responses/200_SegmentListV3'
        '400':
          $ref: '#/components/responses/400_FilterSegmentError'
        '401':
          $ref: '#/components/responses/401_FilterSegmentError'
        '429':
          $ref: '#/components/responses/429_FilterSegmentError'
        '500':
          $ref: '#/components/responses/500_FilterSegmentError'
  /v3/custom-segments/:
    post:
      tags:
        - Custom Segments - Filters
      summary: Create Filter Segment
      description: Creates a new custom segment based on a set of filter conditions.
      operationId: createFilterSegment
      x-mint:
        content: |
          <Note>
            To simplify request generation, you can specify filters in the MoEngage dashboard and generate the payload.
            Navigate to **Test & Debug** -> **Segment Payload** to build your filter query and get the JSON payload.
          </Note>
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
      requestBody:
        description: The filter definition for the new segment.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSegmentRequestV3'
            example:
              name: "segment_example_name"
              included_filters":
                filter_operator: "and"
                filters":
                  - filter_type": "user_attributes"
                    name: "Name"
                    data_type": "string"
                    operator": "in"
                    value": ["Chandan", "Kumar"]
                    negate": false
                    case_sensitive": false
      responses:
        '201':
          $ref: '#/components/responses/201_SegmentCreatedV3'
        '400':
          $ref: '#/components/responses/400_FilterSegmentError'
        '401':
          $ref: '#/components/responses/401_FilterSegmentError'
        '409':
          $ref: '#/components/responses/409_FilterSegmentError'
        '413':
          $ref: '#/components/responses/413_FilterSegmentError'
        '429':
          $ref: '#/components/responses/429_FilterSegmentError'
        '500':
          $ref: '#/components/responses/500_FilterSegmentError'
  /v3/custom-segments/{id}:
    get:
      tags:
        - Custom Segments - Filters
      summary: Get Custom Segment by ID
      description: Fetches a specific custom segment (File or Filter) by its ID.
      operationId: getCustomSegment
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/SegmentIdPath'
      responses:
        '200':
          $ref: '#/components/responses/200_SegmentListV3'
        '400':
          $ref: '#/components/responses/400_FilterSegmentError'
        '401':
          $ref: '#/components/responses/401_FilterSegmentError'
        '429':
          $ref: '#/components/responses/429_FilterSegmentError'
        '500':
          $ref: '#/components/responses/500_FilterSegmentError'
    patch:
      tags:
        - Custom Segments - Filters
      summary: Update Filter Segment
      description: Updates an existing custom filter segment by its ID.
      operationId: updateFilterSegment
      parameters:
        - $ref: '#/components/parameters/AppKeyHeader'
        - $ref: '#/components/parameters/SegmentIdPath'
      requestBody:
        description: The updated filter definition for the segment.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSegmentUpdateRequestV3'
            example:
              name: "segment_example_name_updated"
              included_filters":
                filter_operator: "and"
                filters":
                  - filter_type": "user_attributes"
                    name: "Name"
                    data_type": "string"
                    operator": "in"
                    value": ["chandan"]
                    negate": false
                    case_sensitive": false
              updated_by": "admin@example.com"
      responses:
        '200':
          $ref: '#/components/responses/200_SegmentUpdatedV3'
        '400':
          $ref: '#/components/responses/400_FilterSegmentError'
        '401':
          $ref: '#/components/responses/401_FilterSegmentError'
        '403':
          $ref: '#/components/responses/403_FilterSegmentError'
        '404':
          $ref: '#/components/responses/404_FilterSegmentError'
        '409':
          $ref: '#/components/responses/409_FilterSegmentError'
        '412':
          $ref: '#/components/responses/412_FilterSegmentError'
        '413':
          $ref: '#/components/responses/413_FilterSegmentError'
        '429':
          $ref: '#/components/responses/429_FilterSegmentError'
        '500':
          $ref: '#/components/responses/500_FilterSegmentError'
components:
  schemas:
    # --- V2 Schemas ---
    BaseSegmentRequestV2:
      type: object
      properties:
        name:
          type: string
          description: Name of the custom segment. Must be unique for creation.
        attribute_name:
          type: string
          description: Name of the user attribute to use as an identifier (e.g., 'ID', 'email').
        attribute_type:
          type: string
          description: The data type of the attribute_name.
          enum: [string, double]
        file_url:
          type: string
          format: uri
          description: A public, downloadable URL to a single-column CSV file.
        callback_url:
          type: string
          format: uri
          description: Callback URL to receive the result of segment processing.
        emails:
          type: array
          items:
            type: string
            format: email
          description: List of email IDs to receive segment processing response.
      required:
        - name
        - attribute_name
        - attribute_type
        - file_url
    CreateSegmentRequestV2:
      description: Schema for creating a new file segment.
      allOf:
        - $ref: '#/components/schemas/BaseSegmentRequestV2'
        - type: object
          properties:
            expiry_time:
              type: integer
              format: int32
              description: Segment expiry time in days. The segment is archived after this time.
          required:
            - expiry_time
    UpdateSegmentRequestV2:
      description: Schema for updating an existing file segment (add, remove, replace users).
      $ref: '#/components/schemas/BaseSegmentRequestV2'
    SegmentNameRequestV2:
      description: Schema for requests that only require the segment name.
      type: object
      properties:
        name:
          type: string
          description: The name of the custom segment.
      required:
        - name
    ApiResponseSuccessV2:
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
          example: true
        cs_name:
          type: string
          description: The unique name of the custom segment being processed.
    ApiErrorV2:
      type: object
      properties:
        title:
          type: string
          description: A short title for the error.
        description:
          type: string
          description: A detailed description of what went wrong.
    CallbackSuccessV2:
      type: object
      properties:
        db_name:
          type: string
        segment_name:
          type: string
        request_id:
          type: string
        values_found:
          type: integer
        values_processed:
          type: integer
        user_count:
          type: integer
        status:
          type: integer
          example: 201
    CallbackErrorV2:
      type: object
      properties:
        db_name:
          type: string
        segment_name:
          type: string
        request_id:
          type: string
        status:
          type: integer
          example: 400
        error_message:
          type: string
    # --- V3 Schemas ---
    FilterGroupV3:
      type: object
      description: A logical grouping of filters.
      properties:
        filter_operator:
          type: string
          description: The logical operator to combine the filters.
          enum: [and, or]
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterV3'
      required:
        - filter_operator
        - filters
    FilterV3:
      description: A single filter criterion, which can be user attribute-based or action-based.
      oneOf:
        - $ref: '#/components/schemas/AttributeFilterV3'
        - $ref: '#/components/schemas/ActionFilterV3'
    AttributeFilterV3:
      type: object
      description: A filter based on a user or event attribute.
      properties:
        filter_type:
          type: string
          description: Identifies the filter as attribute-based.
          enum: [user_attributes]
        name:
          type: string
          description: The name of the user attribute.
        data_type:
          type: string
          description: Data type of the attribute.
          enum: [string, double, datetime, bool]
        operator:
          type: string
          description: The comparison operator.
          enum: [is, exists, in, between, lessThan, greaterThan, contains, containsInTheFollowing, startWithInTheFollowing, endsWithInTheFollowing, inTheLast, on, before, after, inTheNext, today]
        value:
          description: The value to compare against. Type depends on `data_type` and `operator`. For 'in' operator, this should be an array.
          oneOf:
            - type: string
            - type: number
            - type: boolean
            - type: array
              items:
                oneOf:
                  - type: string
                  - type: number
        value1:
          description: The second value, used only for the 'between' operator.
          oneOf:
            - type: string
            - type: number
        negate:
          type: boolean
          description: If true, negates the filter condition.
          default: false
        case_sensitive:
          type: boolean
          description: If true, string comparisons are case-sensitive.
          default: false
      required:
        - filter_type
        - name
        - data_type
        - operator
    ActionFilterV3:
      type: object
      description: A filter based on a user action (event).
      properties:
        filter_type:
          type: string
          description: Identifies the filter as action-based.
          enum: [actions]
        action_name:
          type: string
          description: The internal name of the event.
        attributes:
          $ref: '#/components/schemas/FilterGroupV3'
          description: Additional filters to apply to the event's attributes.
        executed:
          type: boolean
          description: Whether the action should have been performed (true) or not (false).
        execution:
          type: object
          properties:
            type:
              type: string
              enum: [atleast, exactly, atmost, firstTime, lastTime]
            count:
              type: integer
              format: int32
              description: The number of times the event must have been performed.
          required:
            - type
            - count
        primary_time_range:
          type: object
          properties:
            type:
              type: string
              enum: [on, inTheLast, before, after, between]
            value_type:
              type: string
              enum: [absolute, relative_past]
            value:
              type: string
              description: Integer (as string) for relative_past, or ISO 8601 Datetime (e.g., 2022-12-21T00:00:00.000Z) for absolute.
            value1:
              type: string
              description: The end datetime for the 'between' operator (ISO 8601).
            period_unit:
              type: string
              enum: [days, weeks, months]
          required:
            - type
            - value_type
            - value
            - period_unit
      required:
        - filter_type
        - action_name
        - executed
        - execution
        - primary_time_range
    FilterSegmentRequestV3:
      type: object
      properties:
        name:
          type: string
          description: A unique name for the custom segment.
        included_filters:
          $ref: '#/components/schemas/FilterGroupV3'
      required:
        - name
        - included_filters
    FilterSegmentUpdateRequestV3:
      type: object
      properties:
        name:
          type: string
          description: A new unique name for the custom segment.
        included_filters:
          $ref: '#/components/schemas/FilterGroupV3'
        updated_by:
          type: string
          format: email
          description: Email of the user performing the update.
      required:
        - included_filters
    FilterSegmentDataV3:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        created_time:
          type: string
          format: date-time
        updated_time:
          type: string
          format: date-time
        type:
          type: string
          example: ELASTIC_SEARCH
        source:
          type: string
          example: API
        description:
          type: string
        included_filters:
          $ref: '#/components/schemas/FilterGroupV3'
    FilterSegmentResponseV3:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FilterSegmentDataV3'
        response_id:
          type: string
        type:
          type: string
          example: custom_segment
    SegmentListItemV3:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        created_time:
          type: string
          format: date-time
        type:
          type: string
          example: ELASTIC_SEARCH
        source:
          type: string
          example: API
    SegmentListResponseV3:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SegmentListItemV3'
        response_id:
          type: string
        type:
          type: string
          example: custom_segment
    ErrorDataV3:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        existing_cs_name:
          type: string
        existing_cs_id:
          type: string
        actual_count:
          type: integer
        limit:
          type: integer
      required:
        - code
        - message
    ErrorResponseV3:
      type: object
      properties:
        response_id:
          type: string
        type:
          type: string
          example: custom_segment
        error:
          $ref: '#/components/schemas/ErrorDataV3'
  parameters:
    # --- V2 Parameters ---
    DatabaseHeader:
      name: Database
      in: header
      description: Set the database from which the data is available (e.g., MOE-DBNAME).
      required: true
      schema:
        type: string
    # --- V3 Parameters ---
    AppKeyHeader:
      name: MOE-APPKEY
      in: header
      description: The Workspace ID (APP ID) of your MoEngage account.
      required: true
      schema:
        type: string
    SegmentIdPath:
      name: id
      in: path
      description: The ID of the custom segment.
      required: true
      schema:
        type: string
    SegmentNameQuery:
      name: name
      in: query
      description: The URL-encoded name of the custom segment to retrieve.
      required: false
      schema:
        type: string
  responses:
    # --- V2 Responses ---
    '202_FileSegmentAccepted':
      description: Request accepted for processing.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponseSuccessV2'
          examples:
            create:
              value:
                message: "File-segment creation request accepted"
                success: true
                cs_name: "custom_segment_unique_name"
            add:
              value:
                message: "File-segment user-add request accepted"
                success: true
                cs_name": "custom_segment_unique_name"
            remove:
              value:
                message: "File-segment user-remove request accepted"
                success: true
                cs_name": "custom_segment_unique_name"
            replace:
              value:
                message: "File-segment user-replace request accepted"
                success: true
                cs_name": "custom_segment_unique_name"
    '400_FileSegmentError':
      description: Bad Request. Invalid payload format.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorV2'
          example:
            title: "Invalid Request"
            description: "<message>"
    '401_FileSegmentError':
      description: Unauthorized. Authentication or Authorization Failure.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorV2'
          example:
            title: "Authentication required"
            description": "<message>"
    '404_FileSegmentNotFound':
      description: Entity Not Found. The custom segment name does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorV2'
          example:
            title: "Entity Not Found"
            description: "Custom segment not found with the given name: <custom_segment_unique_name>"
    '409_FileSegmentConflict':
      description: Conflict. File-segment creation attempt with duplicate name.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorV2'
          example:
            title: "Resource not created"
            description: "Name already exists : <custom_segment_name>"
    '429_FileSegmentRateLimit':
      description: Too Many Requests. The number or rate of requests exceeds the allowed limit.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorV2'
          example:
            title: "Too Many Requests"
            description": "<appropriate message>"
    '5XX_FileSegmentError':
      description: Server Errors. Something went wrong on MoEngage's end.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorV2'
          example:
            title: "Internal Server Error"
            description: "..."
    # --- V3 Responses ---
    '200_SegmentListV3':
      description: Successful retrieval of custom segments.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentListResponseV3'
          example:
            data:
              - name: "api_test_7"
                id: "6388a97a02adb9071ca84ce9"
                created_time": "2022-12-01T13:17:46.409000"
                type: "ELASTIC_SEARCH"
                source: "API"
            response_id": "WYanfieM"
            type: "custom_segment"
    '200_SegmentUpdatedV3':
      description: Custom segment updated successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FilterSegmentResponseV3'
          example:
            data:
              name: "your custom-segment name"
              id: "your custom-segment id"
              created_time: "2022-12-20T06:21:44.112000"
              updated_time: "2022-12-20T06:21:44.160000"
              type: "ELASTIC_SEARCH"
              source: "API"
              description": "Subscription Status 19Dec_7  is active  (case insensitive) AND Has executed Email Sent atleast 1 time in-between Feb 15, 2023 and Feb 24, 2023"
              included_filters:
                filter_operator: "and"
                filters": []
            response_id: "cNjnTEJw"
            type: "custom_segment"
    '201_SegmentCreatedV3':
      description: Custom segment created successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FilterSegmentResponseV3'
          example:
            data:
              name: "custom-segment name"
              id: "custom-segment id"
              created_time: "2022-12-20T06:21:44.112000"
              updated_time: "2022-12-20T06:21:44.160000"
              type: "ELASTIC_SEARCH"
              source: "API"
              description": "Subscription Status 19Dec_7  is active  (case insensitive) AND Has executed Email Sent atleast 1 time in-between Jan 05, 2021 and Jan 08, 2021"
              included_filters":
                filter_operator: "and"
                filters": []
            response_id: "cNjnTEJw"
            type: "custom_segment"
    '400_FilterSegmentError':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseV3'
          examples:
            invalidFormat:
              summary: Invalid Request Format
              value:
                response_id: "xFyVHeOr"
                type: "custom_segment"
                error:
                  code: "Invalid request"
                  message": "Invalid request format. Please check the documentation to ensure that the request has been formed correctly."
            invalidName:
              summary: Invalid Segment Name
              value:
                response_id: "XtVyUnlJ"
                type: "custom_segment"
                error:
                  code: "Invalid Request"
                  message": "Invalid request. Please ensure that the filters are correct and the custom-segment name doesn't contain HTML characters/only whitespaces."
            invalidAppKey:
              summary: Invalid App Key/DB Name
              value:
                response_id: "FkrgtCVr"
                type: "custom_segment"
                error:
                  code: "Request Error"
                  message": "MoEngage Client not found. Please check values for headers - MOE-APPKEY or MOE-DBNAME"
    '401_FilterSegmentError':
      description: Authentication Failure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseV3'
          examples:
            secretMismatch:
              summary: APP_SECRET Key Mismatch
              value:
                response_id: "SzFRAzwK"
                type: "custom_segment"
                error:
                  code: "Authentication required"
                  message": "APP_SECRET key mismatch. Please login to the dashboard to verify key"
            invalidAppKey:
              summary: Invalid APP_KEY in Auth
              value:
                response_id: "bUfoyyhN"
                type: "custom_segment"
                error:
                  code: "Authentication required"
                  message": "Invalid APP_KEY used in Authentication Header"
    '403_FilterSegmentError':
      description: Forbidden Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseV3'
          example:
            response_id: "xuLAWeCN"
            type: "custom_segment"
            error:
              code: "Forbidden operation"
              message: "Update isn't supported for file-segments, internally created custom-segments, custom-segments imported from Analyze and archived custom-segments."
    '404_FilterSegmentError':
      description: Entity Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseV3'
          example:
            response_id: "UAMMfmuU"
            type: "custom_segment"
            error:
              code: "Entity Not Found"
              message: "Custom segment not found with the given id: 638a051185b6b50a018cacc"
    '409_FilterSegmentError':
      description: Conflict / Resource Not Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseV3'
          examples:
            nameExists:
              summary: Name Already Exists
              value:
                response_id: "flJhLXeo"
                type: "custom_segment"
                error:
                  code: "Resource not created"
                  message": "Another custom-segment already exists with the same name: api_test_8. Please change the custom-segment name."
            filterExists:
              summary: Filters Already Exist
              value:
                response_id: "YbzjKmhl"
                type: "custom_segment"
                error:
                  code: "Resource not created"
                  message": "Another custom-segment already exists containing the given filters: api_test_multiple_cs2_re. Please reuse the same or update the filters"
                  existing_cs_name": "api_test_multiple_cs2_re"
                  existing_cs_id": "63a017e8d2460ae81a05bf5e"
    '412_FilterSegmentError':
      description: Precondition Failed (Cyclic Entity)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseV3'
          example:
            response_id: "acOcgPed"
            type: "custom_segment"
            error:
              code: "Cyclic Entity"
              message: "Circular reference detected in the custom segment definition."
    '413_FilterSegmentError':
      description: Payload Too Large / Query Too Complex
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseV3'
          examples:
            tooManyNestingLevels:
              summary: Too Many Nesting Levels
              value:
                response_id: "YbSUZzCZ"
                type: "custom_segment"
                error:
                  code: "Query has too many nesting levels"
                  message": "The query has more than n levels of nesting. Please reduce the segment nesting."
            tooManySegments:
              summary: Too Many Segments in Query
              value:
                response_id: "BcvlFaav"
                type: "custom_segment"
                error:
                  code: "Too many segments in a query"
                  message": "The query has more than n custom segments. Please reduce the custom segments."
            queryLengthExceeded:
              summary: Query Length Limit Exceeded
              value:
                response_id: "AQvmPUIS"
                type: "custom_segment"
                error:
                  code: "Query length limit exceeded"
                  message": "The query is too large to execute. Please reduce the filters."
    '429_FilterSegmentError':
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseV3'
          examples:
            rateLimit:
              summary: API Rate Limit Breached
              value:
                response_id: "OUUkHvcn"
                type: "custom_segment"
                error:
                  code: "Too Many Requests"
                  message": "API rate limit breached. Current limit: n/m mins"
            activeSegmentLimit:
              summary: Active Segment Limit Breached
              value:
                response_id: "jfYkJWRB"
                type: "custom_segment"
                error:
                  code: "Too Many Requests"
                  message": "Total active segments limit breached. Request rejected!"
                  actual_count": 1001
                  limit": 1000
    '500_FilterSegmentError':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseV3'
          example:
            response_id: "HKWwUkvM"
            type: "custom_segment"
            error:
              code: "Internal Server Error"
              message: "An unexpected error was encountered while processing this request. Please contact MoEngage Team"
  callbacks:
    segmentProcessingCallback:
      '{$request.body#/callback_url}':
        post:
          summary: Segment Processing Callback (v2)
          description: A webhook sent to your `callback_url` when a v2 file segment processing job is complete.
          requestBody:
            description: Result of the segment processing job.
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/CallbackSuccessV2'
                    - $ref: '#/components/schemas/CallbackErrorV2'
                examples:
                  success:
                    summary: Success Callback
                    value:
                      db_name: "test_db"
                      segment_name": "test_segment_name"
                      request_id": "d5a263c4ef1198ae3d8496c0460f570f"
                      values_found": 80
                      values_processed": 70
                      user_count": 60
                      status": 201
                  failure_file_size:
                    summary: Failure (File Size Limit)
                    value:
                      db_name: "test_db"
                      segment_name": "test_segment_name"
                      request_id": "d5a263c4ef1198ae3d8496c0460f570f"
                      status": 400
                      error_message": "File size cannot be greater than 150MB. Created custom_segment contains 0 users."
          responses:
            '200':
              description: OK. Acknowledges receipt of the callback. Your endpoint should return this.
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: |
        Basic Authentication using your **Workspace ID** (as username) and **Data API Key** (as password) from the MoEngage Dashboard.