openapi: 3.0.3
info:
  title: Push Templates API
  description: An API for creating, updating, and searching for push notification templates for Android and iOS platforms.
  version: "1.0"
  x-logo:
    url: "https://images.g2crowd.com/uploads/product/image/social_landscape/social_landscape_4cb13a53c5240c218206532439a2f15a/moengage.png"
    altText: "MoEngage Logo"

# The x-tagGroups extension is used by some documentation tools to organize tags.
x-tagGroups:
  - name: Push Templates
    tags:
      - Templates

servers:
  - url: https://api-0{data_center}.moengage.com/v1.0
    description: MoEngage API Server. The `data_center` value (e.g., 1, 2, 3) depends on your account's location.
    variables:
      data_center:
        default: '1'
        description: 'Your account''s data center number (e.g., 1 for US, 2 for EU, 3 for India).'

# Defines the security scheme used by the API (HTTP Basic Auth)
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: "HTTP Basic Authentication using your Workspace ID as the username and API Key as the password."

  schemas:
    # Reusable component for Key-Value pairs
    KeyValue:
      type: object
      properties:
        key:
          type: string
          description: The key for the data pair.
        value:
          type: string
          description: The value for the data pair.
      required:
        - key
        - value

    # Reusable component for Android action buttons
    AndroidButton:
      type: object
      properties:
        btn_name:
          type: string
          description: The name/label of the button.
        click_action_type:
          type: string
          description: The type of action to perform when the button is clicked.
          enum:
            - NAVIGATE_TO_A_SCREEN
            - DEEPLINKING
            - RICH_LANDING
            - CALL
            - SHARE
            - COPY
            - SET_USER_ATTRIBUTE
            - TRACK_EVENT
            - CUSTOM_ACTION
            - SNOOZE
            - REMIND_LATER
        click_action_name:
          type: string
          description: Required when click_action_type is SET_USER_ATTRIBUTE or TRACK_EVENT. This is the key for the key-value pair.
        click_action_value:
          type: string
          description: The value associated with the click action (e.g., URL, screen name).
        key_value_pairs:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
      required:
        - btn_name
        - click_action_type
        - click_action_value

    # Reusable component for iOS action buttons
    IosButton:
      type: object
      properties:
        button_category:
          type: string
          description: The category of the button, which corresponds to an actionable notification category implemented in the app.

    # Reusable component for Android payload
    AndroidPayload:
      type: object
      properties:
        basic_details:
          type: object
          required:
            - title
            - message
            - default_click_action
            - default_click_action_value
          properties:
            title: { type: string, description: "The title of the notification." }
            message: { type: string, description: "The main content of the notification message." }
            summary: { type: string, description: "A brief summary line for the notification." }
            app_name_color_code: { type: string, description: "Hexadecimal color code for the app name.", example: "#5450ea" }
            notification_control_color: { type: string, enum: [Light, Dark], description: "Color theme for notification controls." }
            background_color_code: { type: string, description: "Hexadecimal color code for the notification background.", example: "#f5e6cd" }
            apply_background_color: { type: boolean, description: "If true, applies the background color to text fields like title and message." }
            image_url: { type: string, format: uri, description: "URL for a rich media image. Supports jpg, jpeg, png, gif." }
            input_gif_url: { type: string, format: uri, description: "URL for a GIF, supported only for Android Basic Template." }
            default_click_action: { type: string, enum: [NAVIGATE_TO_A_SCREEN, DEEPLINKING, RICH_LANDING] }
            default_click_action_value: { type: string, description: "The value for the click action (e.g., a URL or screen name)." }
            key_value_pairs: { type: array, items: { $ref: '#/components/schemas/KeyValue' } }
        buttons:
          type: array
          items:
            $ref: '#/components/schemas/AndroidButton'
        advanced:
          type: object
          properties:
            coupon_code: { type: string }
            icon_type_in_notification: { type: string, enum: [appicon, upload, url] }
            large_icon_url: { type: string, format: uri }
            auto_dismiss_notification: { type: boolean }
            dismissal_time_multiplier: { type: string, enum: [DAYS, HOURS, MINUTES] }
            dismissal_time_value: { type: integer }
            make_notification_sticky: { type: boolean }
            dismiss_button_text: { type: string }
            group_key: { type: string, description: "Key to group related notifications together." }
            collapse_replace_key: { type: string, description: "Key to identify notifications that should be replaced by newer ones." }
        template_backup:
          type: object
          description: "A fallback notification definition for older Android SDK versions."
          properties:
            title: { type: string, description: "The title of the backup notification." }
            message: { type: string, description: "The message of the backup notification." }
            summary: { type: string, description: "The summary of the backup notification." }
            image_url: { type: string, format: uri }
            default_click_action: { type: string, enum: [NAVIGATE_TO_A_SCREEN, DEEPLINKING, RICH_LANDING] }
            default_click_action_value: { type: string }
            key_value_pairs: { type: array, items: { $ref: '#/components/schemas/KeyValue' } }
          required:
            - title
            - message
            - default_click_action
            - default_click_action_value
    
    # Reusable component for iOS payload
    IosPayload:
      type: object
      properties:
        basic_details:
          type: object
          required:
            - title
            - message
            - default_click_action_value
          properties:
            title: { type: string, description: "The title of the notification." }
            subtitle: { type: string, description: "The subtitle of the notification." }
            message: { type: string, description: "The main content of the notification message." }
            background_color_code: { type: string, description: "Hexadecimal color code for the notification background.", example: "#f5e6cd" }
            apply_background_color: { type: boolean, description: "If true, applies background color to text fields." }
            default_click_action: { type: string, enum: [NAVIGATE_TO_A_SCREEN, DEEPLINKING, RICH_LANDING] }
            default_click_action_value: { type: string, description: "The value for the click action." }
            key_value_pairs: { type: array, items: { $ref: '#/components/schemas/KeyValue' } }
            rich_media_type: { type: string, enum: [IMAGE, AUDIO, VIDEO, GIF] }
            rich_media_value: { type: string, format: uri, description: "URL of the rich media content." }
            allow_bg_refresh: { type: boolean, description: "Indicates whether the app should be allowed to refresh in the background." }
        buttons:
          type: array
          items:
            $ref: '#/components/schemas/IosButton'
        advanced:
          type: object
          properties:
            coupon_code: { type: string }
            sound_file: { type: string, description: "Name of the sound file to play upon receiving the notification." }
            enable_ios_badge: { type: boolean, description: "Whether to show a badge count on the app icon." }
            group_key: { type: string, description: "Key to group related notifications together (thread-id)." }
            collapse_replace_key: { type: string, description: "Key to identify notifications that should be replaced by newer ones (collapse-id)." }
        template_backup:
          type: object
          description: "A fallback notification definition for older iOS SDK versions."
          properties:
            title: { type: string }
            subtitle: { type: string }
            message: { type: string }
            default_click_action: { type: string, enum: [NAVIGATE_TO_A_SCREEN, DEEPLINKING, RICH_LANDING] }
            default_click_action_value: { type: string }
            key_value_pairs: { type: array, items: { $ref: '#/components/schemas/KeyValue' } }
            rich_media_type: { type: string, enum: [IMAGE, AUDIO, VIDEO] }
            rich_media_value: { type: string, format: uri }
            allow_bg_refresh: { type: boolean }
          required:
            - title
            - message
            - default_click_action
            - default_click_action_value

    # General Error Response Schema
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: "400 Bad Request"
            message:
              type: string
              example: "Validation failed because of invalid request data"
            details:
              type: array
              items:
                type: object
                properties:
                  code: { type: string, example: "MissingValue" }
                  target: { type: string, example: "template_name" }
                  message: { type: string, example: "template_name value is required but value is passed empty." }
            request_id:
              type: string
              example: "jUxStmFn"
    SimpleErrorResponse:
      type: object
      properties:
        title:
          type: string
          example: "Authentication required"
        description:
          type: string
          example: "MOE-APPKEY missing in Authentication Header"

# Global security setting: applies BasicAuth to all endpoints
security:
  - BasicAuth: []

paths:
  /custom-templates/push:
    post:
      tags:
        - Templates
      summary: Create Push Template
      description: Creates a new push notification template for one or more platforms (Android, iOS).
      operationId: createPushTemplate
      requestBody:
        description: A JSON object containing the template definitions for desired platforms and metadata.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ANDROID:
                  $ref: '#/components/schemas/AndroidPayload'
                IOS:
                  $ref: '#/components/schemas/IosPayload'
                meta_info:
                  type: object
                  description: Metadata associated with the template.
                  required:
                    - platform
                    - template_style
                    - template_id
                    - template_name
                    - template_version
                    - created_by
                  properties:
                    platform: { type: array, items: { type: string, enum: [ANDROID, IOS] } }
                    template_style: { type: string, enum: [BASIC, STYLIZED] }
                    template_id: { type: string, description: "A unique ID for the template, generated by you." }
                    template_name: { type: string }
                    template_version: { type: string }
                    created_by: { type: string, description: "Identifier of the user creating the template (e.g., email)." }
              required:
                - meta_info
      responses:
        '200':
          description: Template created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  external_template_id:
                    type: string
                    format: uuid
                    description: A unique system-generated ID for the created template.
                    example: "d05a44f0-a7cf-471a-bcb6-63054800a367"
        '400':
          description: Bad Request. The request is malformed, contains invalid data, or violates a business rule (e.g., duplicate template).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authorization Failure. The provided credentials are missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '415':
          description: Unsupported Media Type. The `Content-Type` header is not `application/json`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '429':
          description: Rate Limit Breach. The number of requests has exceeded the allowed limit (100 RPM).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Templates
      summary: Update Push Template
      description: Updates an existing push notification template by creating a new version.
      operationId: updatePushTemplate
      requestBody:
        description: A JSON object containing the template ID to update, the updated platform payloads, and new metadata.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                external_template_id:
                  type: string
                  format: uuid
                  description: The unique system-generated ID of the template to update.
                update_campaigns:
                  type: boolean
                  default: false
                  description: If true, all campaigns using this template will be updated to this new version.
                ANDROID:
                  $ref: '#/components/schemas/AndroidPayload'
                IOS:
                  $ref: '#/components/schemas/IosPayload'
                meta_info:
                  type: object
                  description: Metadata for the new template version.
                  required:
                    - platform
                    - template_style
                    - updated_by
                    - template_name
                  properties:
                    platform: { type: array, items: { type: string, enum: [ANDROID, IOS] } }
                    template_style: { type: string, enum: [BASIC, STYLIZED] }
                    updated_by: { type: string, description: "Identifier of the user updating the template (e.g., email)." }
                    template_name: { type: string }
                    template_version: { type: string, description: "The new version identifier for the template." }
              required:
                - external_template_id
                - meta_info
      responses:
        '200':
          description: Template updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  external_template_id:
                    type: string
                    format: uuid
                    description: The unique system-generated ID for the newly created version of the template.
                    example: "eca024b7-a8ea-4f31-9154-5b80c85d18a9"
        '400':
          description: Bad Request. The request is malformed or the template ID is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'

  /custom-templates/push/search:
    post:
      tags:
        - Templates
      summary: Search for Push Templates
      description: Searches for push templates based on a variety of filter criteria. Sending an empty request body will fetch all templates.
      operationId: searchPushTemplates
      requestBody:
        description: A JSON object containing filters for the search.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page: { type: integer, description: "The page number for pagination.", default: 1 }
                entries: { type: integer, description: "Number of entries per page.", default: 10 }
                template_name: { type: string, description: "Filter by template name (partial match supported)." }
                platform: { type: array, items: { type: string, enum: [ANDROID, IOS] } }
                template_source: { type: array, items: { type: string, enum: [API, MOENGAGE] } }
                template_style: { type: array, items: { type: string, enum: [BASIC, STYLIZED] } }
                template_type: { type: array, items: { type: string, enum: [CUSTOM, PRE_BUILT] } }
                created_by: { type: array, items: { type: string, format: email } }
                updated_by: { type: array, items: { type: string, format: email } }
                sort_params:
                  type: array
                  items:
                    type: object
                    properties:
                      template_name: { type: string, enum: [ASCENDING, DESCENDING] }
                      last_modified_date: { type: string, enum: [ASCENDING, DESCENDING] }
                      last_modified_by: { type: string, enum: [ASCENDING, DESCENDING] }
                template_ids:
                  type: array
                  items:
                    type: object
                    properties:
                      external_template_id: { type: string, format: uuid }
                      version: { type: integer }
      responses:
        '200':
          description: Search completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        external_template_id: { type: string, format: uuid }
                        version: { type: integer }
                        ANDROID: { $ref: '#/components/schemas/AndroidPayload' }
                        IOS: { $ref: '#/components/schemas/IosPayload' }
                        meta_info: { type: object }
                        created_by: { type: string }
                        created_at: { type: string, format: date-time }
                        updated_by: { type: string }
                        updated_at: { type: string, format: date-time }
        '400':
          description: Bad Request. The search request contains invalid field values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '429':
          description: Rate Limit Breach. The number of requests has exceeded the allowed limit (100 RPM).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'

